/* automatically generated by JSCoverage - do not edit */
if (typeof _$jscoverage === 'undefined') _$jscoverage = {};
if (! _$jscoverage['object-channel.js']) {
  _$jscoverage['object-channel.js'] = [];
  _$jscoverage['object-channel.js'][14] = 0;
  _$jscoverage['object-channel.js'][15] = 0;
  _$jscoverage['object-channel.js'][16] = 0;
  _$jscoverage['object-channel.js'][23] = 0;
  _$jscoverage['object-channel.js'][27] = 0;
  _$jscoverage['object-channel.js'][35] = 0;
  _$jscoverage['object-channel.js'][36] = 0;
  _$jscoverage['object-channel.js'][37] = 0;
  _$jscoverage['object-channel.js'][38] = 0;
  _$jscoverage['object-channel.js'][39] = 0;
  _$jscoverage['object-channel.js'][40] = 0;
  _$jscoverage['object-channel.js'][42] = 0;
}
_$jscoverage['object-channel.js'][14]++;
(function () {
  _$jscoverage['object-channel.js'][15]++;
  require("abstract").createModel((function (model, prototype) {
  _$jscoverage['object-channel.js'][16]++;
  model.set({"defaults": {delimiter: ".", wildcard: true, maxListeners: 20}});
  _$jscoverage['object-channel.js'][23]++;
  model.properties({defaults: require("abstract").utility.noop, noop: require("abstract").utility.noop});
  _$jscoverage['object-channel.js'][27]++;
  model.properties(prototype, {emit: require("eventemitter2").EventEmitter2.prototype.emit, on: require("eventemitter2").EventEmitter2.prototype.on, off: require("eventemitter2").EventEmitter2.prototype.off, onAny: require("eventemitter2").EventEmitter2.prototype.onAny, subscribe: require("abstract").utility.noop, unsubscribe: require("abstract").utility.noop});
  _$jscoverage['object-channel.js'][35]++;
  model.defineInstance((function (config) {
  _$jscoverage['object-channel.js'][36]++;
  this.listenerTree = {};
  _$jscoverage['object-channel.js'][37]++;
  this.wildcard = model.get("defaults.wildcard");
  _$jscoverage['object-channel.js'][38]++;
  this.maxListeners = model.get("defaults.maxListeners");
  _$jscoverage['object-channel.js'][39]++;
  this.delimiter = model.get("defaults.delimiter");
  _$jscoverage['object-channel.js'][40]++;
  return this.set("emitter", config);
}));
  _$jscoverage['object-channel.js'][42]++;
  return module.exports = model;
}));
}).call(this);
_$jscoverage['object-channel.js'].source = ["// Generated by CoffeeScript 1.6.3","/**","* Object Channels","*","* Create EventEmitter channels.","*","* @version 0.0.3","* @module object-channel","* @author potanin@UD","* @constructor","*/","","","(function() {","  require('abstract').createModel(function(model, prototype) {","    model.set({","      'defaults': {","        delimiter: '.',","        wildcard: true,","        maxListeners: 20","      }","    });","    model.properties({","      defaults: require('abstract').utility.noop,","      noop: require('abstract').utility.noop","    });","    model.properties(prototype, {","      emit: require('eventemitter2').EventEmitter2.prototype.emit,","      on: require('eventemitter2').EventEmitter2.prototype.on,","      off: require('eventemitter2').EventEmitter2.prototype.off,","      onAny: require('eventemitter2').EventEmitter2.prototype.onAny,","      subscribe: require('abstract').utility.noop,","      unsubscribe: require('abstract').utility.noop","    });","    model.defineInstance(function(config) {","      this.listenerTree = {};","      this.wildcard = model.get('defaults.wildcard');","      this.maxListeners = model.get('defaults.maxListeners');","      this.delimiter = model.get('defaults.delimiter');","      return this.set('emitter', config);","    });","    return module.exports = model;","  });","","}).call(this);"];
